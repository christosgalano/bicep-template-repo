# File: ci.yaml

name: Continuous Integration

on:
  pull_request:
    paths:
      - "bicep/**"
      - "!bicep/abbreviations.json"
      - ".github/**"
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Generate the Bicep documentation if any of the modules or environments have changed.
  generate-bicep-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Download bicep-docs
        run: |
          wget https://github.com/christosgalano/bicep-docs/releases/download/v1.0.1/bicep-docs_linux_amd64.tar.gz -O bicep-docs.tar.gz
          tar xzf bicep-docs.tar.gz
          chmod +x bicep-docs
          mv bicep-docs /usr/local/bin

      - name: Run bicep-docs
        run: bicep-docs --input ./bicep --verbose

      - name: Check for changes in bicep directory
        id: git-diff
        run: |
          change=false
          if git status --porcelain | grep -E 'bicep/.*/README.md'; then
            change=true
          fi
          echo "changed=$change" >> $GITHUB_OUTPUT

      - name: Commit and push if there are changes
        if: steps.git-diff.outputs.changed == 'true'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add bicep
          git commit -m "Update documentation"
          git push

  # Retrieve and export all of the environments in the "bicep/environments" directory as a JSON array.
  select-environments:
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.select-all-environments.outputs.environments }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select all environments
        id: select-all-environments
        run: |
          environments=( $(ls ./) )
          environments_json=$(jq -c -n '$ARGS.positional' --args "${environments[@]}")
          echo "Selected environments: $environments_json"
          echo "environments=$environments_json" >> $GITHUB_OUTPUT
        working-directory: bicep/environments

  # Validate the Bicep environment modules in matrix jobs. Each environment has its own matrix job.
  # If one or more matrix jobs fail, then the rest carry on normally and are not canceled.
  validate-environments:
    name: validate-${{ matrix.environment }}
    needs: select-environments
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        environment: ${{ fromJson(needs.select-environments.outputs.environments) }}
    env:
      BICEP_ENV_DIR: bicep/environments/${{ matrix.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bicep lint
        run: az bicep lint --file main.bicep
        working-directory: ${{ env.BICEP_ENV_DIR }}

      - name: Bicep build
        run: |
          az bicep build --file main.bicep --outfile main.json
          az bicep build-params --file main.bicepparam --outfile main.parameters.json
        working-directory: ${{ env.BICEP_ENV_DIR }}

      - name: Run PSRule
        uses: microsoft/ps-rule@v2.9.0
        with:
          inputPath: ${{ env.BICEP_ENV_DIR }}/main*.json
          modules: "PSRule.Rules.Azure"
          outputFormat: NUnit3
          outputPath: psrule-results-${{ matrix.environment }}-${{ github.run_number }}.xml
          summary: true

      - name: Publish results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2.14.0
        with:
          check_name: psrule-scan-${{ matrix.environment }}
          nunit_files: psrule-results-${{ matrix.environment }}-${{ github.run_number }}.xml
          comment_mode: always
          fail_on: test failures
          action_fail: false
          ignore_runs: false
          job_summary: false
          compare_to_earlier_commit: true
          check_run_annotations: all tests, skipped tests

      - name: Upload results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: psrule-results-${{ matrix.environment }}-run-${{ github.run_number }}
          path: psrule-results-${{ matrix.environment }}-${{ github.run_number }}.xml
